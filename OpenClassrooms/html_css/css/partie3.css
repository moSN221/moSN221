/*
2 types de balises : block et inline
ici balises de type block

width (largeur) : en px, en %, en em
height (hauteur)
min-width ou min-height
max-with ou max height
ceci garde quand même la taille min/max du block quand on retrecit ou agrandit la fenêtre
padding(marge intérieur)
margin(marge extérieur)
margin-top
margin-bottom
margin-left
margin-right
ou margin : 12px 10px 5px 3px (sens des aiguilles d'une montre en partant du haut)
s'il y a trop de texte : ajouter des barres de défilement avec overflow : (hidden, visible,scroll ou auto)
forcer la césure d'un mot avec word-wrap : (break word)

flexbox
manipuler les blocks
par défaut les blocks sont les unes au-dessus des autres

#conteneur
{
display : flex (pour les mettre en ligne)
flex-direction : column (colum-reverse) ou row
flex-wrap : nowrap(pas de retour à la ligne, par defaut), wrap(aller à ligne quand il n'ya plus de place), wrap-reverse(les éléments vont à la ligne qd il n'y a plus de place en sens inverse ie en haut à gauche plutôt que en bas à gauche


Manipulation dans l'axe principal
justify-content : flex-start (alignés u début), flex-end (alignés à la fin), center (alignés au centre), space-between (étirés sur tout l'axe, il y a de l'espace entre eux), space-around(idem plus de l'espace sur les extrémités)
flex-direction : colum pour les mettre en column et refaire es mêmes opérations si on veut les faire en colonnes

pour changer l'alignement sur l'axe secondaire
align-items : stretch (éléments étirés sur tout l'axe, par défaut), flex-start (alignés au début),flex-end, center, baseline(alignés sur la base)
ceci permet de centrer un élément.
autre option, faire un margin auto sur le box

aligner un seul élément dans une ligne
.element:nth-child(2) permet de prendre le deuxième bloc élément
align-self : flex-end (align permet de faire les oprations sur l'axe secondaire)

il est possible de faire align-contents pour manipuler plusieurs lignes : (avec les mêmes valeurs que align-items) pour manipuler plusieurs lignes de blocs (ie un contenu de block)

on peut changer l'ordre des items sans changer le code html
.element:nth-child(1)
order : 3; l'élément passe de la première à la 3e position
faire pareil pour les autres items

grossir ou maigrir les items
.element:nth-child(2)
flex:1; le second élément s'étire pour prendre tout l'espace restant
----
.element:nth-child(1)
flex:2;
.element:nth-child(2)
flex:1;
avec ça, lepremier élément occupe 2 fois plus d'espace que le 2e item
---


le nbre après flex indique dans quelle mesure l'item peut grossir par rapport aux autres.
}