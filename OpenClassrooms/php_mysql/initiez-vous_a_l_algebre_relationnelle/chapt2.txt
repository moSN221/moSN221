PROJECTION RESTRICTION

La projection, c'est simplement le fait de sélectionner les attributs d'une relation que l'on souhaite, en éliminant les autres.
Avec la projection, on se contentait de sélectionner les colonnes qui nous intéressaient. La restriction, c'est l'équivalent de la projection, mais pour les lignes.

OPERATEURS ENSEMBLISTES

L'union de deux relations R1 et R2 de même schéma produit une troisième relation, également de même schéma, qui contient l'ensemble des tuples de R1 et de R2.

La différence entre une relation R3 et R2 donne une relation R1 qui contient tous les tuples de R3 qui n'appartiennent pas à R2. Il est tout à fait possible d'effectuer la différence entre R1 et R2 même si R2 contient des tuples non présents dans R1.

L'intersection entre deux relations R1 et R2 donne une troisième relation contenant les tuples qui sont présents à la fois dans R1 et dans R2. L'intersection est équivalente à deux différences successives. En effet, R1 intersection R2est équivalent à R1 différence (R1 différence R2). Je vous laisse prendre un papier et un crayon pour découvrir pourquoi !

PRODUIT CARTESIEN

En algèbre relationnelle, le produit cartésien entre deux relations R1 et R2 est justement composé de toutes les combinaisons possibles entre les tuples de R1 et les tuples de R2.

JOINTURES
Si je prends une pomme, et que je veux connaître son prix au kilo, il faudra d'abord que je connaisse sa variété. Ensuite, il faudra que je retrouve dans la table variété la ligne correspondante, pour connaître le prix. La jointure aura pour but de "coller" les tables pomme et variété. Elle créera une grande table qui contiendra à la fois les informations de ma pomme et également les informations sur sa variété. En général, quand on emploie le terme jointure, on parle de jointure interne. Jointure sur une clé étrangère d'une table et une clé primaire ou candidate d'une autre table

Nous pouvons effectuer une jointure sur plusieurs colonnes (allez, disons 2 colonnes). Si c'est le cas, alors une clé étrangère qui référence cette clé primaire sera forcément composée de 2 colonnes. La condition de jointure sera de cette forme : relation1.attribut1 = relation2.attribut3 AND relation1.attribut2 = relation2.attribut4

Jointure externe : dans le cas où des informations sur une relation sont manquantes (null) et que l'on souhaite quand même conserver cette entrée dans la jointure, on parle de jointure externe. Elle peut se faire soit à gauche ou à droite si l'un des relations présente ce cas de figure. On parle également de jointure totale si les deux relations contiennent des valeurs (null)

La jointure est en fait l'enchaînement d'un produit cartésien et d'une restriction !

Jointure naturelle : C'est une jointure classique. Mais si elle intervient sur deux relations dont les colonnes à lier ont exactement le même nom d'une table à l'autre, alors la jointure peut être implicite.

AGREGATION

On utilise l'agrégation lorsque l'on veut calculer un résultat qui porte sur plusieurs lignes d'une table. On dit que l'on agrège ces lignes, c'est-à-dire que l'on forme des agrégats pour effectuer sur eux une opération.

Les deux éléments qui constituent l'agrégation
Le partitionnement : Le partitionnement a pour but de créer des groupes de lignes de telle manière à ce que deux lignes se trouvant dans un même groupe aient les mêmes valeurs pour les attributs de partitionnement. On forme ainsi des agrégats (ex pommes de même couleur)
L'agrégation : Une fois les agrégats formés, il faut bien en faire quelque chose ! C'est là qu'intervient la fonction d'agrégation.
Son rôle est de prendre en entrée un groupe de plusieurs lignes, d'effectuer un calcul sur celles-ci, puis de retourner une unique valeur pour chacun des groupes.

Comme la fonction d'agrégation retourne une valeur pour chacun des agrégats, la table qui résultera de l'agrégation aura autant de lignes que d'agrégats. La nature des objets représentés par une ligne avant l'agrégation (ici : une pomme) ne sera pas la même qu'une ligne après agrégation (ici : un ensemble de pommes).

NE PERDEZ PAS DE VUE VOS CLES

Bien connaître ses clés, c'est également très important lors des jointures.

En général, on effectue une jointure : d'une clé étrangère d'une table A....... vers la clé primaire (ou vers une clé candidate) d'une table B. Dans ce cas, le nombre de lignes de la table que vous obtiendrez aura :

autant, ou moins de lignes que A si vous faites une jointure interne,

autant de lignes que A si vous faites une jointure externe à gauche (avec A à gauche).

En règle générale, dans votre condition de jointure

A.cle_étrangere = B.cle_candidate

assurez-vous qu’au moins l’un des 2 termes de part et d’autre du = soit une clé candidate ou primaire.

Si ce n’est pas le cas, ce n'est pas interdit, mais vérifiez bien que vous ne faites pas une erreur de raisonnement. Soyez-sûr que c'est ce dont vous avez vraiment besoin. Surtout, vérifiez bien la table finale en terme de cohérence et surtout en terme de nombre de lignes.

Comment vérifier si un groupe d'attributs G est une clé candidate ?
Pour le savoir, faites une projection sur G (en gros, supprimez les colonnes qui ne sont pas G), puis regardez s'il y a des doublons. S'il y a des doublons, alors votre G n'est pas une clé.

S'il n'y a pas de doublons, alors il y a deux possibilités :
Si vous êtes sûrs qu'aucune nouvelle ligne ne sera ajoutée, alors vous pouvez considérer que G est une clé.
Si d'autres lignes seront peut-être ajoutées par la suite, il faut prendre contact avec celui (celle) qui a conçu la table, ou regarder dans la documentation qu'il (elle) a écrit, pour savoir si G est une clé, ou pour savoir ce que représente une ligne.

Vérifier si une table contient des doublons
Si votre table contient beaucoup de lignes, il est difficile de détecter à l’œil nu les doublons ! Voici donc une recette à implémenter dans votre langage de programmation préféré :
Comptez le nombre de lignes de votre table.
Supprimez les doublons.
Re-comptez le nombre de lignes de votre table.
Si le nombre de lignes de l'étape 1 est différent de l'étape 3, alors votre table contenait des doublons !

Beaucoup de langages d'analyse de données permettent d’éliminer facilement les doublons d'une table :
En SQL, il faut employer le mot utiliser SELECT DISTINCT.
En R, il faut utiliser la fonction unique().
En Python, il faut employer la méthode drop_duplicates() de la librairie Pandas.